version: 2
jobs:
  build:
    working_directory: /go/src/vary/prom_rest_exporter
    environment:

    docker:
      - image: circleci/golang:1.11.2-stretch

    steps:
      - checkout
      - run: 
          name: Get dependencies
          command: |
            go get github.com/stretchr/testify
            go get gopkg.in/yaml.v2
            go get github.com/gorilla/mux
            go get github.com/sirupsen/logrus
            GOOS=windows go get github.com/konsorten/go-windows-terminal-sequences

      - run:
          name: Install build tools
          command: sudo apt install  autoconf make libtool flex bison gcc-mingw-w64-x86-64

      - restore_cache:
          name: Restore jq cache
          key: v1-jq

      - run:
          name: Download jq master
          command: if [ ! -d jq-master ]; then git clone https://github.com/stedolan/jq.git jq-master; fi

      - run:
          name: Build jq for windows
          working_directory: /go/src/vary/prom_rest_exporter/jq-master
          command: |
            if [ ! -d build/win64 ]; then
              git submodule update --init && \
              autoreconf -fi && \
              ./configure && \
              make distclean && \
              CPPFLAGS=-I$PWD/src scripts/crosscompile win64 \
                --disable-shared \
                --enable-static \
                --enable-all-static \
                --target=win64-x86_64 \
                --host=x86_64-w64-mingw32 \
                --with-oniguruma=builtin
            fi

      - run:
          name: Build jq for linux
          working_directory: /go/src/vary/prom_rest_exporter/jq-master
          command: |
            if [ ! -d build/linux ]; then
              autoreconf -fi && \
              ./configure --with-oniguruma=builtin --prefix=$PWD/build/linux/usr/local && \
              make -j8 && \
              make install && \
              rm -f build/linux/usr/local/lib/*.so*
            fi

      - save_cache:
          name: Save jq cache
          paths:
            - jq-master
          key: v1-jq

      - run:
          name: Test
          command: go test -v ./...

      - run:
          name: Build for linux
          command: go build -v

      - run:
          name: Build for windows
          command: GOOS=windows GOARCH=amd64 CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc go build -v

      - store_artifacts:
          path: prom_rest_exporter
          destination: binaries/prom_rest_exporter
      - store_artifacts:
          path: prom_rest_exporter.exe
          destination: binaries/prom_rest_exporter.exe
